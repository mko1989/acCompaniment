{
  "name": "accompaniment",
  "version": "0.2.0",
  "description": "A soundboard app",
  "main": "main.js",
  "scripts": {
    "start": "electron .",
    "test": "echo \"Error: no test specified\" && exit 1",
    "postinstall": "electron-rebuild",
    "pack": "electron-builder --dir",
    "dist": "NODE_ENV=production electron-builder --mac --win",
    "dist:mac": "NODE_ENV=production electron-builder --mac",
    "dist:win": "NODE_ENV=production electron-builder --win"
  },
  "keywords": [
    "electron",
    "soundboard",
    "companion",
    "audio",
    "cues",
    "audiocues",
    "waveform"
  ],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "electron": "^31.7.7",
    "electron-builder": "^24.13.3",
    "electron-rebuild": "^3.2.9"
  },
  "dependencies": {
    "audio-decode": "^2.2.3",
    "express": "^5.1.0",
    "fs-extra": "^11.2.0",
    "howler": "^2.2.4",
    "music-metadata": "^11.2.3",
    "node-osc": "^9.1.5",
    "node-web-audio-api": "^1.0.4",
    "osc": "^2.4.5",
    "uuid": "^11.1.0",
    "waveform-data": "^4.5.1",
    "wavesurfer.js": "^7.9.5",
    "ws": "^8.18.2"
  },
  "build": {
    "appId": "com.highpass.acCompaniment",
    "productName": "acCompaniment",
    "mac": {
      "category": "public.app-category.music",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "universal"
          ]
        }
      ],
      "icon": "assets/icons/icon.png",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "extendInfo": {
        "NSMicrophoneUsageDescription": null,
        "NSCameraUsageDescription": null,
        "NSBluetoothAlwaysUsageDescription": null,
        "NSBluetoothPeripheralUsageDescription": null
      }
    },
    "win": {
      "target": "nsis",
      "icon": "assets/icons/icon.ico"
    },
    "files": [
      "**/*",
      "!node_modules/.bin",
      "!node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}",
      "!*.{md,lock,yaml,toml,gitattributes,editorconfig}",
      "!.*ignore",
      "!./{docs,test,tests,samples,examples,tutorials}",
      "!./{.*,*.map,*.opts,*.lintr,*.flowconfig,*.jshintrc,*.jsbeautifyrc}",
      "!./{bower.json,Gruntfile.js,gulpfile.js,karma.conf.js}"
    ]
  }
}
